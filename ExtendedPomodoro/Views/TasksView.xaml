<Page x:Class="ExtendedPomodoro.Views.TasksView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:controls="clr-namespace:ExtendedPomodoro.Controls"
      xmlns:components="clr-namespace:ExtendedPomodoro.Views.Components"
      xmlns:vms="clr-namespace:ExtendedPomodoro.ViewModels"
      xmlns:services="clr-namespace:ExtendedPomodoro.Services"
      xmlns:converters="clr-namespace:ExtendedPomodoro.Converters"
      mc:Ignorable="d" 
      d:DataContext="{d:DesignInstance Type=vms:TasksViewModel}"
      d:DesignHeight="450" d:DesignWidth="400"
      Title="TasksView">

    <Page.Resources>
        <converters:InvertBooleanConverter x:Key="InvertBoolConv"/>
        <converters:InvertBooleanToVisibilityConverter x:Key="InvertBoolToVisibilityConv"/>
        <converters:TaskStateConverter x:Key="TaskStateConv"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConv"/>

        <CollectionViewSource 
            x:Key="TasksCollectionViewSource" 
            Source="{Binding ReadTasksViewModel.Tasks}" 
            IsLiveGroupingRequested="True">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="CreatedAt"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Page.Resources>

    <Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Auto">
            <Grid Width="400">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Button 
                    Style="{StaticResource IconizedButtonStyle}"
                    Grid.Row="0" 
                    Tag="PlusCircle"
                    Content="Add new"
                    HorizontalAlignment="Left"
                    Command="{Binding CreateTaskViewModel.OpenModalCommand}"
                    />

                <WrapPanel Grid.Row="0" HorizontalAlignment="Right">

                    <!--tag is used for determining active color-->
                    <Button 
                        Style="{StaticResource LeftTabbedButtonStyle}" 
                        Tag="{Binding ReadTasksViewModel.IsDisplayingCompletedTasks, Converter={StaticResource InvertBoolConv}}"
                        Command="{Binding ReadTasksViewModel.DisplayInProgressTasksCommand}"
                        Content="In Progress"/>
                    <Button 
                        Style="{StaticResource RightTabbedButtonStyle}"
                        Tag="{Binding ReadTasksViewModel.IsDisplayingCompletedTasks}" 
                        Command="{Binding ReadTasksViewModel.DisplayCompletedTasksCommand}"
                        Content="Completed"/>
                </WrapPanel>

                <!--Showing tasks-->
                <controls:TasksListView 
                    ItemsSource="{Binding Source={StaticResource TasksCollectionViewSource}, Mode=OneWay}" 
                    BorderThickness="0"
                    Grid.Row="1" 
                    Margin="0 10 0 0"
                    LoadMoreButtonStyle="{StaticResource ButtonStyle}"
                    LoadMoreTasksCommand="{Binding ReadTasksViewModel.DisplayMoreTasksCommand}"
                    IsLoadMoreButtonShown="{Binding ReadTasksViewModel.AreThereMoreTasks}"
                    FocusVisualStyle="{x:Null}">
                    <controls:TasksListView.ItemTemplate>
                        <DataTemplate>
                            <Border 
                                CornerRadius="15"
                                BorderThickness="1" 
                                Height="30"
                                Margin="0 0 0 10"
                                BorderBrush="{StaticResource Black-50}">
                                <Border.Resources>
                                    <services:BindingProxy x:Key="CurrentDataContext" Data="{Binding}"/>
                                </Border.Resources>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0">
                                        <TextBlock 
                                            FontSize="{StaticResource FSSmall}" 
                                            FontFamily="{StaticResource FWRegular}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            MaxWidth="250"
                                            TextTrimming="CharacterEllipsis"
                                            Margin="10 0 0 0"
                                            Foreground="{DynamicResource Black}"
                                            Text="{Binding Name}"/>
                                    </Grid>

                                    <controls:IconOnlyButton 
                                        Command="{Binding DataContext.UpdateTaskViewModel.LoadTaskDetailCommand, 
                                        RelativeSource={RelativeSource AncestorType={x:Type Page}}}"
                                        CommandParameter="{Binding Data, Source={StaticResource CurrentDataContext}}"
                                        Grid.Column="1"
                                        Cursor="Hand"
                                        Kind="ArrowUpRightCircle"
                                        ToolTip="Edit/view detail"
                                        Foreground="{StaticResource Info}"
                                        HoverColor="{StaticResource InfoDarker}"
                                        Width="16"
                                        Height="16"/>

                                    <controls:IconOnlyButton 
                                        Grid.Column="2"
                                        Cursor="Hand"
                                        Kind="XCircle"
                                        ToolTip="Delete"
                                        Foreground="{StaticResource Danger}"
                                        HoverColor="{StaticResource DangerDarker}"
                                        Margin="5 0 0 0"
                                        Width="16"
                                        Height="16"
                                        Command="{Binding DataContext.DeleteTaskViewModel.DeleteTaskCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type Page}}}"
                                       CommandParameter="{Binding Id}"/>

                                    <controls:IconOnlyButton 
                                        Grid.Column="3"
                                        Cursor="Hand"
                                        Kind="CheckCircle"
                                        ToolTip="Mark as completed"
                                        Foreground="{StaticResource Success}"
                                        HoverColor="{StaticResource SuccessDarker}"
                                        Margin="5 0 10 0"
                                        Width="16"
                                        Height="16"
                                        Visibility="{Binding DataContext.ReadTasksViewModel.IsDisplayingCompletedTasks, 
                                        RelativeSource={RelativeSource AncestorType={x:Type Page}},
                                        Converter={StaticResource InvertBoolToVisibilityConv}}"
                                        Command="{Binding DataContext.UpdateTaskViewModel.UpdateTaskStateCommand, 
                                        RelativeSource={RelativeSource AncestorType={x:Type Page}}}">
                                        <controls:IconOnlyButton.CommandParameter>
                                            <vms:UpdateTaskStateDomainViewModel
                                                TaskId="{Binding Data.Id, Source={StaticResource CurrentDataContext}}"
                                                IntendedTaskState="1"/>
                                        </controls:IconOnlyButton.CommandParameter>
                                    </controls:IconOnlyButton>

                                    <controls:IconOnlyButton 
                                        Grid.Column="3"
                                        Cursor="Hand"
                                        Kind="ArrowLeftCircle"
                                        ToolTip="Mark as in progress"
                                        Foreground="{StaticResource Orange}"
                                        HoverColor="{StaticResource OrangeDarker}"
                                        Margin="5 0 10 0"
                                        Width="16"
                                        Height="16"
                                        Visibility="{Binding DataContext.ReadTasksViewModel.IsDisplayingCompletedTasks, 
                                                RelativeSource={RelativeSource AncestorType={x:Type Page}},
                                                Converter={StaticResource BoolToVisibilityConv}}"
                                        Command="{Binding DataContext.UpdateTaskViewModel.UpdateTaskStateCommand, 
                                        RelativeSource={RelativeSource AncestorType={x:Type Page}}}"
                                                         >
                                        <controls:IconOnlyButton.CommandParameter>
                                            <vms:UpdateTaskStateDomainViewModel
                                                TaskId="{Binding Data.Id, Source={StaticResource CurrentDataContext}}"
                                                IntendedTaskState="0"/>
                                        </controls:IconOnlyButton.CommandParameter>
                                    </controls:IconOnlyButton>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </controls:TasksListView.ItemTemplate>
                    <controls:TasksListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </controls:TasksListView.ItemContainerStyle>
                    <controls:TasksListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Margin="5 10 0 5"
                                        Text="{Binding Items[0].CreatedAt}" 
                                        FontSize="{StaticResource FSSmall}" 
                                        FontFamily="{StaticResource FWMedium}"
                                        Foreground="{StaticResource Black}"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </controls:TasksListView.GroupStyle>
                    <controls:TasksListView.Resources>
                        <Style TargetType="ScrollBar">
                            <Setter Property="Margin" Value="10 0 0 0"/>
                        </Style>
                    </controls:TasksListView.Resources>
                </controls:TasksListView>

            </Grid>
        </ScrollViewer>

        <components:ModalCreateTaskUserControl 
            x:Name="ModalCreateTask"
            IsShown="{Binding CreateTaskViewModel.IsModalShown, Mode=TwoWay}"
            Style="{StaticResource RemoveErrorBorderUserControlStyle}"
            CreateTaskViewModel="{Binding CreateTaskViewModel}"/>

        <!--Modal edit task/view task detail popup-->
        <controls:Modal 
            x:Name="ModalViewTaskDetail"
            Width="340" 
            Height="300"
            IsShown="{Binding UpdateTaskViewModel.IsModalShown}"
            Style="{StaticResource DefaultModalStyle}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid Grid.IsSharedSizeScope="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" SharedSizeGroup="Label"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock 
                        Visibility="Collapsed" 
                        x:Name="IdTaskDetail"
                        Text="{Binding UpdateTaskViewModel.Id, Mode=TwoWay}"/>
                    <TextBlock 
                        Text="Title"
                        Margin="0 0 20 15"
                        VerticalAlignment="Center"
                        Style="{StaticResource TextBlockFormLabelStyle}"/>
                    <TextBox 
                        Grid.Column="1"
                        Width="175"
                        Margin="0 0 0 15"
                        Text="{Binding UpdateTaskViewModel.Name, Mode=TwoWay}"
                        Style="{StaticResource TextBoxStyle}"/>
                    <TextBlock 
                        Grid.Row="1"
                        Text="Description"
                        Margin="0 0 20 15"
                        Style="{StaticResource TextBlockFormLabelStyle}"/>
                    <TextBox 
                        Grid.Column="1"
                        Grid.Row="1"
                        Height="65"
                        Width="175"
                        Margin="0 0 0 15"
                        VerticalContentAlignment="Top"
                        Text="{Binding UpdateTaskViewModel.Description, Mode=TwoWay}"
                        Style="{StaticResource TextBoxStyle}"/>
                    <TextBlock 
                        Text="Est. / Act. Pomodoro"
                        Margin="0 0 20 15"
                        Grid.Row="2"
                        VerticalAlignment="Center"
                        Style="{StaticResource TextBlockFormLabelStyle}"/>
                    <WrapPanel Grid.Column="1" Grid.Row="2" Margin="0 0 0 15">
                        <TextBox 
                        Width="60"
                        HorizontalAlignment="Left"
                        Text="{Binding UpdateTaskViewModel.EstPomodoro, Mode=TwoWay}"
                        Style="{StaticResource TextBoxStyle}"
                        Margin="0 0 7 0"/>
                        <TextBlock 
                            Text="/" 
                            Margin="0 0 7 0" 
                            VerticalAlignment="Center" 
                            Style="{StaticResource TextBlockFormValueStyle}"/>
                        <TextBlock 
                            Text="{Binding UpdateTaskViewModel.ActPomodoro}"
                            VerticalAlignment="Center"
                            Style="{StaticResource TextBlockFormValueStyle}"/>
                    </WrapPanel>
                    <TextBlock 
                        Grid.Row="3"
                        Text="Status"
                        Margin="0 0 20 15"
                        VerticalAlignment="Center"
                        Style="{StaticResource TextBlockFormLabelStyle}"/>
                    <ComboBox 
                        Grid.Row="3"
                        Grid.Column="1"
                        Style="{StaticResource ComboBoxStyle}"
                        Width="110"
                        Height="25"
                        HorizontalAlignment="Left"
                        x:Name="StatusTaskDetail"
                        Margin="0 0 0 15"
                        SelectedValuePath="Tag"
                        SelectedValue="{Binding UpdateTaskViewModel.TaskStatus, Mode=TwoWay}">
                        <ComboBox.Items>
                            <ComboBoxItem Tag="0">In Progress</ComboBoxItem>
                            <ComboBoxItem Tag="1">Completed</ComboBoxItem>
                        </ComboBox.Items>
                    </ComboBox>
                    <TextBlock 
                        Grid.Row="4"
                        Text="Time Spent"
                        Margin="0 0 20 0"
                        Style="{StaticResource TextBlockFormLabelStyle}"/>
                    <TextBlock 
                        Grid.Column="1"
                        Grid.Row="4"
                        x:Name="TimeSpentTaskDetail"
                        Text="{Binding UpdateTaskViewModel.TimeSpentInMinutes, StringFormat={}{0} minutes, Mode=TwoWay}"
                        Style="{StaticResource TextBlockFormValueStyle}"/>
                </Grid>
                <WrapPanel HorizontalAlignment="Right" Margin="0 20 0 0">
                    <Button Style="{StaticResource ButtonStyle}" 
                        Content="Close" 
                        Command="{Binding UpdateTaskViewModel.CloseModalCommand}"
                        Margin="0 0 10 0"/>
                    <Button Style="{StaticResource ButtonInfoStyle}" 
                        Command="{Binding UpdateTaskViewModel.UpdateTaskCommand}"
                        Content="Save"/>
                </WrapPanel>
            </StackPanel>
        </controls:Modal> 
        
    </Grid>
</Page>
