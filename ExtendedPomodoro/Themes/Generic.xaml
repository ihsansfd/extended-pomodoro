<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ExtendedPomodoro"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:controls="clr-namespace:ExtendedPomodoro.Controls"
    xmlns:converters="clr-namespace:ExtendedPomodoro.Converters"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    >

    <converters:SpaceToMarginConverter x:Key="SpaceToMarginConv"/>
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConv"/>
    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConv"/>
    <converters:InvertNullToVisibilityConverter x:Key="InvertNullToVisibilityConv"/>

    <!--#Region: DrawerSidebarMenu--> 
    <Style TargetType="{x:Type controls:DrawerSidebarMenu}">
        <Setter Property="Panel.ZIndex" Value="999"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DrawerSidebarMenu}">
                    <Border 
                        Padding="12 20 13 20" x:Name="PART_MenuBorder">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter 
                                    Property="Width" 
                                    Value="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerSidebarMenu}}}"/>
                                <Setter
                                    Property="Background"
                                    Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerSidebarMenu}}}"/>
                                <Setter
                                    Property="Padding"
                                    Value="{Binding Path=Padding, RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerSidebarMenu}}}"/>
                            </Style>
                        </Border.Style>
                        <StackPanel>
                            <CheckBox 
                                IsChecked="False" 
                                x:Name="PART_MenuToggle">
                                <CheckBox.Template>
                                    <ControlTemplate TargetType="CheckBox">
                                        <controls:DrawerSidebarMenuItem 
                                            x:Name="PART_MenuToggleMenuItem"
                                            Kind="List" 
                                            Margin="0 0 0 45" 
                                            Text="Menu"
                                            Style="{Binding Path=MenuTogglerStyle, RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerSidebarMenu}}}">
                                        </controls:DrawerSidebarMenuItem>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter 
                                                    TargetName="PART_MenuToggleMenuItem" 
                                                    Property="Kind" 
                                                    Value="XLg" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </CheckBox.Template>
                            </CheckBox>
                            <ContentControl Content="{TemplateBinding Content}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:DrawerSidebarMenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DrawerSidebarMenuItem}">
                    <Border Cursor="Hand" Background="Transparent">
                        <Border.InputBindings>
                            <MouseBinding Gesture="LeftClick"
                                          Command="{Binding Path=Command, RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerSidebarMenuItem}}}"
                                          CommandParameter="{Binding Path=CommandParameter, RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerSidebarMenuItem}}}"
                                          />
                        </Border.InputBindings>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconBootstrapIcons
                            Kind="{TemplateBinding Kind}" 
                            Foreground="{TemplateBinding Foreground}" 
                            Width="{TemplateBinding IconSize}"
                            Height="{TemplateBinding IconSize}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            />
                            <TextBlock 
                            Text="{TemplateBinding Text}" 
                            Foreground="{TemplateBinding Foreground}" 
                            FontSize="{TemplateBinding FontSize}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Space, Converter={StaticResource SpaceToMarginConv}}"
                            />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#End Region: DrawerSidebarMenu-->

    <!--#Region: Modal-->
    <Style TargetType="{x:Type controls:Modal}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Modal}">
                    <Border Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}" 
                        Height="{TemplateBinding Height}" 
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        CornerRadius="10" 
                        Visibility="{TemplateBinding IsShown, Converter={StaticResource BoolToVisibilityConv}}"
                        Panel.ZIndex="999999999">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="5"  Opacity="0.4" />
                        </Border.Effect>

                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock 
                                    Visibility="{TemplateBinding Title, Converter={StaticResource NullToVisibilityConv}}"
                                    Text="{TemplateBinding Title}"
                                    HorizontalAlignment="Left"
                                    Margin="15 20 15 20"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"/>
                            <ContentPresenter/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#End Region: Modal-->

    <!--#Region: Buttons-->

    <Style TargetType="{x:Type controls:IconOnlyButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconOnlyButton}">
                    <Border Background="Transparent" Cursor="{TemplateBinding Cursor}">
                        <Border.InputBindings>
                            <MouseBinding Gesture="LeftClick"
                                        Command="{Binding Path=Command, RelativeSource={RelativeSource AncestorType={x:Type controls:IconOnlyButton}}}"
                                        CommandParameter="{Binding Path=CommandParameter, RelativeSource={RelativeSource AncestorType={x:Type controls:IconOnlyButton}}}"/>
                        </Border.InputBindings>
                        <iconPacks:PackIconBootstrapIcons 
                                    Kind="{TemplateBinding Kind}" 
                                    Foreground="{TemplateBinding Foreground}"
                                    VerticalAlignment="Center"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
    <!--#End Region: Buttons-->
    
    <!--#Region: TasksListView-->
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    <Style TargetType="{x:Type controls:TasksListView}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TasksListView}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <StackPanel>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0 0 0 10"/>
                                <Button 
                                    Content="Load More" 
                                    Margin="0 0 0 10"
                                    Visibility="{TemplateBinding IsLoadMoreButtonShown, Converter={StaticResource BoolToVisibilityConv}}"
                                    Style="{TemplateBinding LoadMoreButtonStyle}" 
                                    Command="{TemplateBinding LoadMoreTasksCommand}"/>
                            </StackPanel>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#End Region: TasksListView-->
    
    <!--#Region: TasksComboBox-->
    <ControlTemplate x:Key="CustomToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Border Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type controls:TasksComboBox}}}"
                        BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:TasksComboBox}}}"
                        CornerRadius="5"
                       BorderThickness="1" />
            <iconPacks:PackIconBootstrapIcons 
                    Kind="CaretDownFill" 
                    Width="10" 
                    Height="10"
                    Margin="0 0 10 0"
                    Foreground="{Binding Path=PlaceholderForeground, RelativeSource={RelativeSource AncestorType={x:Type controls:TasksComboBox}}}"
                    HorizontalAlignment="Right" 
                    VerticalAlignment="Center"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:TasksComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TasksComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition 
                        MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                        Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                       AllowsTransparency="true" 
                       Grid.ColumnSpan="2" 
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       Margin="1" 
                       Placement="Bottom" 
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome 
                        x:Name="shadow" 
                        Color="Transparent" 
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                            CornerRadius="5" 
                            Padding="5" 
                            x:Name="dropDownBorder" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="auto"/>
                                                </Grid.RowDefinitions>
                                                <Canvas 
                                            x:Name="canvas"
                                            HorizontalAlignment="Left" 
                                            Height="0" 
                                            VerticalAlignment="Top" 
                                            Width="0">
                                                    <Rectangle 
                                                x:Name="opaqueRect" 
                                                Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter 
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Button
                                                    Margin="0 5 0 0"
                                                    Grid.Row="1"
                                                    Tag="ThreeDots"
                                                    Visibility="{TemplateBinding IsLoadMoreButtonShown,Converter={StaticResource BoolToVisibilityConv}}"
                                                    Command="{TemplateBinding LoadMoreTasksCommand}"
                                                    Style="{TemplateBinding ButtonStyle}">
                                                    Load More
                                                </Button>
                                            </Grid>
                                        </ScrollViewer>
                                        <Button
                                            Margin="0 5 0 0"
                                            Grid.Row="1"
                                            x:Name="PART_AddNewTaskButton"
                                            Tag="PlusCircle"
                                            Command="{TemplateBinding AddNewTaskCommand}"
                                            Style="{TemplateBinding ButtonStyle}">
                                            Add New
                                        </Button>
                                    </Grid>

                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton
                    x:Name="toggleButton" 
                    Template="{StaticResource CustomToggleButton}"
                    Cursor="Hand"
                    Grid.ColumnSpan="2" 
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Grid.Column="1"
                                x:Name="contentPresenter" 
                                Margin="10 0 10 0"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                HorizontalAlignment="Center" 
                                IsHitTestVisible="false"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="Center"/>
                            <!--Placeholder-->
                            <TextBlock 
                                Grid.Column="1"
                                Text="Select task..."
                                Foreground="{TemplateBinding PlaceholderForeground}"
                                Visibility="{TemplateBinding SelectedItem, Converter={StaticResource InvertNullToVisibilityConv}}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Margin="10 0 10 0"
                                IsHitTestVisible="False"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                            <controls:IconOnlyButton 
                                Grid.Column="0"
                                Kind="CheckCircle"
                                Cursor="Hand"
                                Command="{TemplateBinding CompleteTaskCommand}"
                                Foreground="{TemplateBinding CompleteTaskButtonForeground}"
                                HoverColor="{TemplateBinding CompleteTaskButtonHoverColor}"
                                Visibility="{TemplateBinding SelectedItem, Converter={StaticResource NullToVisibilityConv}}"
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="10 0 0 0"/>
                            <controls:IconOnlyButton
                                Grid.Column="2"
                                Kind="X"
                                Cursor="Hand"
                                Command="{TemplateBinding CancelTaskCommand}"
                                Foreground="{TemplateBinding PlaceholderForeground}"
                                Visibility="{TemplateBinding SelectedItem, Converter={StaticResource NullToVisibilityConv}}"
                                Width="10"
                                Height="10"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Margin="0 0 10 0"/>
                        </Grid>
                        
                            
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--#End Region: TasksComboBox-->
    
</ResourceDictionary>
