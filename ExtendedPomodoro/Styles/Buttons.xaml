<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:core="clr-namespace:ExtendedPomodoro.Core"
                    >

    <Style TargetType="Button" x:Key="MainHoverColorButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MainHoverColor}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="BaseCustomButtonStyle" BasedOn="{StaticResource MainHoverColorButton}">
        <Setter Property="FontFamily" Value="{StaticResource FWRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FSSmall}"/>
        <Setter Property="Background" Value="{StaticResource LightGrey}"/>
        <Setter Property="Foreground" Value="{StaticResource Black}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10 7 10 7"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style TargetType="Button" x:Key="BaseCustomButtonStyleSmall" BasedOn="{StaticResource BaseCustomButtonStyle}">
        <Setter Property="FontSize" Value="{StaticResource FSVerySmall}"/>
    </Style>

    <Style TargetType="Button" x:Key="ButtonStyle" BasedOn="{StaticResource BaseCustomButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="5"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <TextBlock 
                                Text="{TemplateBinding Content}"
                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonInfoStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Background" Value="{StaticResource Info}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style TargetType="Button" x:Key="ButtonSmallStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="FontSize" Value="{StaticResource FSVerySmall}"/>
    </Style>
    <Style TargetType="Button" x:Key="ButtonInfoSmallStyle" BasedOn="{StaticResource ButtonInfoStyle}">
        <Setter Property="FontSize" Value="{StaticResource FSVerySmall}"/>
    </Style>



    <Style TargetType="Button" x:Key="IconizedButtonStyle" BasedOn="{StaticResource BaseCustomButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="5"
                            Padding="10 7 10 7"
                            SnapsToDevicePixels="true">
                        <WrapPanel>
                            <iconPacks:PackIconBootstrapIcons Kind="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                              Foreground="{TemplateBinding Foreground}"
                                                              Height="16"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Width="16"
                                                              Margin="0 0 10 0"
                                                              />
                            <TextBlock 
                                Text="{TemplateBinding Content}"
                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                />
                        </WrapPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="TagActiveButtonWithBaseCustomStyle" BasedOn="{StaticResource BaseCustomButtonStyle}">
        <Style.Triggers>
            <!--Tag here determining whether it's active or not-->
            <Trigger Property="Tag">
                <Trigger.Value>
                    <sys:Boolean>True</sys:Boolean>
                </Trigger.Value>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{StaticResource MainActiveColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="LeftTabbedButtonStyle" BasedOn="{StaticResource TagActiveButtonWithBaseCustomStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="5 0 0 0"
                            Padding="10 7 10 7"
                            SnapsToDevicePixels="true">
                        <TextBlock 
                                Text="{TemplateBinding Content}"
                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RightTabbedButtonStyle" BasedOn="{StaticResource TagActiveButtonWithBaseCustomStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="0 5 0 0"
                            Padding="10 7 10 7"
                            SnapsToDevicePixels="true">
                        <TextBlock 
                                Text="{TemplateBinding Content}"
                                FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                >
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Todo: Make the color static-->
    <!--region ToggleButton-->
    <Style TargetType="ToggleButton" x:Key="ToggleButtonStyle">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="HoverBrush" Color="{Binding Source={StaticResource MainHoverColor}, Path=Color}"/>
                        <SolidColorBrush x:Key="BorderBackground" Color="{Binding Source={StaticResource TogglerBackground}, Path=Color}"/>
                    </ControlTemplate.Resources>
                    <Border 
                        x:Name="PART_Border"
                        Background="{StaticResource BorderBackground}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Tag="{TemplateBinding Tag}"
                        CornerRadius="10">
                        <Button 
                            x:Name="PART_Toggler" 
                            HorizontalAlignment="Left"
                            Width="{TemplateBinding FontSize}"
                            Height="{TemplateBinding FontSize}"
                            IsHitTestVisible="False"
                            Margin="3 0 0 0">
                            <Button.Template>
                                <ControlTemplate>
                                    <Ellipse Fill="White"/>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation 
                                        Duration="0:0:0.200" 
                                        Storyboard.TargetName="PART_Toggler" 
                                        Storyboard.TargetProperty="Margin"
                                        To="32,0,0,0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <core:SolidColorBrushAnimation 
                                        Duration="0:0:0.200" 
                                        Storyboard.TargetName="PART_Border" 
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        ToBrush="{StaticResource HoverBrush}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation 
                                        Duration="0:0:0.200" 
                                        Storyboard.TargetName="PART_Toggler" 
                                        Storyboard.TargetProperty="Margin"
                                        To="3,0,0,0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <core:SolidColorBrushAnimation 
                                        Duration="0:0:0.200" 
                                        Storyboard.TargetName="PART_Border" 
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        ToBrush="{StaticResource BorderBackground}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--endregion ToggleButton-->
    
    <!--region Slider-->
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="{Binding Source={StaticResource TogglerBackground}, Path=Color}"/>
    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Ellipse 
                    x:Name="grip"
                    Fill="{StaticResource SliderThumb.Static.Background}"
                    Stroke="{StaticResource SliderThumb.Static.Border}"
                    StrokeThickness="1"
                    Width="15"
                    Height="15"
                    UseLayoutRounding="True"
                    VerticalAlignment="Center"
                    />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                <Border x:Name="TrackBackground" 
                            Background="{StaticResource SliderThumb.Track.Background}" 
                            Height="10" 
                            Margin="5,0" 
                            Grid.Row="1"
                            CornerRadius="5"
                            VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
                                x:Name="Thumb" 
                                Cursor="Hand"
                                Focusable="False" 
                                Height="18" 
                                OverridesDefaultStyle="True" 
                                Template="{StaticResource SliderThumbHorizontalDefault}" 
                                VerticalAlignment="Center"
                                Width="15"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
    </Style>
    <!--endregion Slider-->

</ResourceDictionary>